{
  "openapi": "3.0.3",
  "info": {
    "title": "Product Management",
    "version": "1.0.0",
    "description": "This is a RESTful API for a simple Product Management System, built with Node.js, Express, and Sequelize ORM.",
    "contact": {
      "name": "Product Management",
      "email": "fiorezarn@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development Server"
    },
    {
      "url": "https://product-management-8or6.onrender.com/",
      "description": "Production Server"
    }
  ],
  "paths": {
    "/product": {
      "get": {
        "tags": ["Product"],
        "summary": "Get All Product",
        "description": "Get All Product",
        "operationId": "getAllProduct",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Tasty Plastic Fish"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters"
          }
        }
      },
      "post": {
        "tags": ["Product"],
        "summary": "Create Product",
        "description": "Create Product",
        "operationId": "createProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "examples": {
                "Create Product": {
                  "value": {
                    "description": "Innovative Bacon featuring limp technology and Fresh construction",
                    "name": "Awesome Soft Cheese",
                    "price": 10000,
                    "stock": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "409": {
            "description": "Duplicate product name"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Product By Id",
        "description": "Get details of a product by its ID",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Update Product",
        "description": "Update details of a product",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "21"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "examples": {
                "Update Product": {
                  "value": {
                    "description": "Innovative Bacon featuring limp technology and Fresh construction",
                    "name": "Awesome Soft Cheese",
                    "price": 10000,
                    "stock": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete Product",
        "description": "Remove a product by its ID",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "example": "Awesome Soft Cheese"
          },
          "description": {
            "type": "string",
            "example": "Innovative Bacon featuring limp technology and Fresh construction"
          },
          "price": {
            "type": "number",
            "example": 10000
          },
          "stock": {
            "type": "number",
            "example": 10
          }
        }
      }
    }
  }
}
